// <auto-generated />
using System;
using DataBaseRestaurant.DataAccess.Sqlite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataBaseRestaurant.DataAccess.Sqlite.Migrations
{
    [DbContext(typeof(RestaurantDbContext))]
    partial class RestaurantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.ClientsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Preferences")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.HistoryOrdersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("TEXT");

                    b.Property<string>("ListDishes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalSum")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("HistoryOrders", (string)null);
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.IngredientsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantityInWareHouse")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("Ingredients", (string)null);
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.MenuEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityCalorie")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.OrdersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TableId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalSum")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.HasIndex("TableId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.SuppliersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Ratting")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Suppliers", (string)null);
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.TablesEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantitySeat")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("WorkerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("WorkerId");

                    b.ToTable("Tables", (string)null);
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.WorkersEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumberPhone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Salary")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Workers", (string)null);
                });

            modelBuilder.Entity("IngredientsEntityMenuEntity", b =>
                {
                    b.Property<int>("IngredientsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.HasKey("IngredientsId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("IngredientsEntityMenuEntity");
                });

            modelBuilder.Entity("MenuEntityOrdersEntity", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrdersId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MenuId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("MenuEntityOrdersEntity");
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.HistoryOrdersEntity", b =>
                {
                    b.HasOne("DataBaseRestaurant.DataAccess.Sqlite.Models.ClientsEntity", "Client")
                        .WithMany("HistoryOrders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.IngredientsEntity", b =>
                {
                    b.HasOne("DataBaseRestaurant.DataAccess.Sqlite.Models.SuppliersEntity", "Supplier")
                        .WithMany("Ingredient")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.OrdersEntity", b =>
                {
                    b.HasOne("DataBaseRestaurant.DataAccess.Sqlite.Models.ClientsEntity", "Clients")
                        .WithOne("Orders")
                        .HasForeignKey("DataBaseRestaurant.DataAccess.Sqlite.Models.OrdersEntity", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBaseRestaurant.DataAccess.Sqlite.Models.TablesEntity", "Table")
                        .WithMany("Orders")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clients");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.TablesEntity", b =>
                {
                    b.HasOne("DataBaseRestaurant.DataAccess.Sqlite.Models.WorkersEntity", "Worker")
                        .WithMany("Tables")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("IngredientsEntityMenuEntity", b =>
                {
                    b.HasOne("DataBaseRestaurant.DataAccess.Sqlite.Models.IngredientsEntity", null)
                        .WithMany()
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBaseRestaurant.DataAccess.Sqlite.Models.MenuEntity", null)
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MenuEntityOrdersEntity", b =>
                {
                    b.HasOne("DataBaseRestaurant.DataAccess.Sqlite.Models.MenuEntity", null)
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataBaseRestaurant.DataAccess.Sqlite.Models.OrdersEntity", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.ClientsEntity", b =>
                {
                    b.Navigation("HistoryOrders");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.SuppliersEntity", b =>
                {
                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.TablesEntity", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DataBaseRestaurant.DataAccess.Sqlite.Models.WorkersEntity", b =>
                {
                    b.Navigation("Tables");
                });
#pragma warning restore 612, 618
        }
    }
}
